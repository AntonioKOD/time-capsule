# Memory Capsule Creator - Environment Variables
# Copy this file to .env.local and fill in your actual values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB connection string
# For local development: mongodb://localhost:27017/memory-capsule
# For MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/memory-capsule
DATABASE_URI=mongodb://localhost:27017/memory-capsule

# =============================================================================
# PAYLOAD CMS CONFIGURATION
# =============================================================================

# Payload CMS secret key (generate a secure random string)
# You can generate one at: https://generate-secret.vercel.app/32
PAYLOAD_SECRET=your-super-secure-secret-key-here-32-characters-minimum

# =============================================================================
# NEXT.JS CONFIGURATION
# =============================================================================

# Your app's public URL (used for CORS and email links)
NEXT_PUBLIC_APP_URL=http://localhost:3000

# =============================================================================
# AWS SES CONFIGURATION (for email delivery)
# =============================================================================

# AWS credentials for SES email service
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_REGION=us-east-1

# Email configuration
FROM_EMAIL=noreply@yourdomain.com
FROM_NAME=Memory Capsule Creator

# =============================================================================
# STRIPE CONFIGURATION (for $1 capsule payments)
# =============================================================================

# Stripe API keys (get from https://dashboard.stripe.com/apikeys)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here

# Stripe webhook endpoint secret (for webhook verification)
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here

# =============================================================================
# SMTP CONFIGURATION (for admin notifications - optional)
# =============================================================================

# SMTP server configuration (for admin email notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
SMTP_FROM=admin@yourdomain.com

# =============================================================================
# SMS CONFIGURATION (for SMS delivery)
# =============================================================================

# Twilio SMS configuration (get from https://console.twilio.com/)
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890

# Alternative SMS providers (uncomment to use instead of Twilio)
# INFOBIP_API_KEY=your-infobip-api-key
# INFOBIP_BASE_URL=https://api.infobip.com

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT secret for session management (generate a secure random string)
JWT_SECRET=your-jwt-secret-key-here

# Encryption key for sensitive data (32 characters)
ENCRYPTION_KEY=your-32-character-encryption-key-here

# =============================================================================
# FILE STORAGE CONFIGURATION
# =============================================================================

# For local development, files are stored in ./media
# For production, configure AWS S3 or similar cloud storage

# AWS S3 configuration (optional - for production file storage)
AWS_S3_BUCKET=your-s3-bucket-name
AWS_S3_REGION=us-east-1
AWS_S3_ACCESS_KEY_ID=your-s3-access-key-id
AWS_S3_SECRET_ACCESS_KEY=your-s3-secret-access-key

# Vercel Blob Storage (for production file uploads)
BLOB_READ_WRITE_TOKEN=your_vercel_blob_token_here

# =============================================================================
# RATE LIMITING & SECURITY
# =============================================================================

# Maximum capsules per IP per day (default: 10)
MAX_CAPSULES_PER_DAY=10

# Enable maintenance mode (true/false)
MAINTENANCE_MODE=false

# =============================================================================
# ANALYTICS & MONITORING (optional)
# =============================================================================

# Google Analytics tracking ID (optional)
NEXT_PUBLIC_GA_TRACKING_ID=G-XXXXXXXXXX

# Sentry DSN for error tracking (optional)
SENTRY_DSN=https://your-sentry-dsn-here

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Node environment
NODE_ENV=development

# Enable debug logging (true/false)
DEBUG=false

# =============================================================================
# EXAMPLE VALUES FOR QUICK SETUP
# =============================================================================

# For quick local development, you can use these example values:
# MONGODB_URI=mongodb://localhost:27017/memory-capsule
# PAYLOAD_SECRET=development-secret-key-not-for-production-use-only
# NEXT_PUBLIC_APP_URL=http://localhost:3000
# AWS_REGION=us-east-1
# FROM_EMAIL=test@example.com
# FROM_NAME=Memory Capsule (Dev)
# MAX_CAPSULES_PER_DAY=50
# MAINTENANCE_MODE=false
# NODE_ENV=development
# DEBUG=true

# =============================================================================
# PRODUCTION DEPLOYMENT NOTES
# =============================================================================

# 1. Generate secure random values for all secret keys
# 2. Set up MongoDB Atlas or your preferred MongoDB hosting
# 3. Configure AWS SES for email delivery
# 4. Set up Stripe account and get API keys
# 5. Configure proper CORS origins for your domain
# 6. Set up file storage (AWS S3 recommended for production)
# 7. Enable proper logging and monitoring
# 8. Set NODE_ENV=production
# 9. Disable DEBUG in production 